;; all icons are nf-md-...

(deflisten network :initial '{"essid": "lo", "signal": "", "icon":"?"}' "./scripts/network.sh")
(defpoll battery :interval "1000ms" :initial '{"percentage":"0", "icon":"?"}' "./scripts/battery.sh")

(defpoll volume_icon :interval "1s" "~/.config/eww/scripts/volume.sh icon")
(defpoll volume_value :interval "1s" "~/.config/eww/scripts/volume.sh vol")
(defpoll is_muted :interval "1s" "~/.config/eww/scripts/volume.sh muted")

(defpoll winfocus :interval "1s" "~/.config/eww/scripts/miscellaneous.sh win")

(defpoll meteo :interval "10s" "~/.config/eww/scripts/meteo.sh")

;(deflisten toggle_dashboard_with_rofi
;    :initial "closed"
;    "
;    dbus-monitor \
;        \"path='/org/freedesktop/Notifications',interface='com.github.ibonn.rofi',member='open'\" \
;        \"path='/org/freedesktop/Notifications',interface='com.github.ibonn.rofi',member='close'\" |
;        stdbuf -o0 awk \
;            -F '; ' \
;            -e '/interface=com.github.ibonn.rofi/ {print $NF}' |
;        while read -r line; do ./widgets/toggle_dashboard_with_rofi.nu $line; done
;    "
;)

;; (include "./mywidgets/notifications.yuck")
(include "./mywidgets/notifications2.yuck")
(include "./mywidgets/music.yuck")

(defwindow bg_music_notif
    :geometry (geometry
        :y "25px"
        :width "256px"
        :anchor "top right"
    )
    :monitor 0
    :namespace "eww_bg_music_notif"
    :stacking "bottom"
    (box
        :class "bg_music_notif"
        :orientation "vertical"
        (bg_music_notif)
        ;(label
        ;    :class "invisible"
        ;    :text "${toggle_dashboard_with_rofi}"
        ;)
    )
)

(defwidget bg_music_notif []
    (box
        :orientation "vertical"
        :spacing 32
        :space-evenly false
        (spotify)
        (notifications)
    )
)


(include "./panels/batteryborder.yuck")

(defwindow batteryborder
    :geometry (geometry
        :height "100%"
        :anchor "center right"
    )
    :monitor 0
    :exclusive true
    :stacking "fg"
    :namespace "eww_batteryborder"
    (batteryborder)
)





;; all icons are nf-md-...

(include "./mywidgets/audio.yuck")
(include "./mywidgets/clock.yuck")
(include "./panels/leftstatusbar.yuck")
;;(include "./widgets2/screenshot.yuck")
;;(include "./widgets2/recorder.yuck")
;;(include "./widgets2/workspaces.yuck")

(defwindow leftstatusbar [stacking]
    :geometry (geometry
        :height "100%"
        :anchor "center left"
    )
    :monitor 0
    :exclusive true
    :stacking { stacking }
    :namespace "eww_leftstatusbar"
    (leftstatusbar)
)








;(deflisten current_theme :initial "dark" "../scripts/material.py --current")

(include "./panels/powermenu.yuck")

(defwindow powermenu
  :monitor 0 ;; wayland users may need this
  :stacking "fg"
  :wm-ignore true
  ;; :geometry (geometry :width "40%" :height "100%" :anchor "center right")
  :geometry (geometry :width "100%" :height "100%" :anchor "center")
  (powermenu_layout)
)



(defwindow notificationsoverlay
  :monitor 0 ;; wayland users may need this
  :stacking "fg"
  :wm-ignore true
  :geometry (geometry :width "16%" :height "98%" :x 20 :anchor "center right" )
  (box :class "panel" :valign "start" :halign "end"
            :vexpand true :hexpand true
        (notifications-dashboard)
    )
)




;; TODO: idea is to have two bars with height 100% and width 3px, positioned on the sides of the desktop and indicating battery and connection status
(include "./panels/veryminimal.yuck")

(defwindow veryminimalleft
  :monitor 0 ;; wayland users may need this
  :stacking "fg"
  :wm-ignore true
  :geometry (geometry :width "3px" :height "100%")
  (veryminimalleft_layout)
)
;;(defwindow veryminimalright
;;  :monitor 0 ;; wayland users may need this
;;  :stacking "fg"
;;  :wm-ignore true
;;  :geometry (geometry :width "3px" :height "100%" :anchor "center right")
;;  (veryminimalright_layout)
;;)



;; test purpose
(defwindow wintitle
  :monitor 0 ;; wayland users may need this
  :stacking "fg"
  :wm-ignore true
  :geometry (geometry :height "2px")
  (wintitle_layout)
)

(defwidget wintitle_layout []

  (box :orientation "h"
      :valign "start"
      :halign "center"
      :space-evenly "false"
      :class "window"
      :height 20
      :spacing 20
    (label :text "-${winfocus.title}-")
  )
)