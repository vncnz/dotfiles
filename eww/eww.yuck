;; all icons are nf-md-...

(deflisten network :initial '{"essid": "lo", "signal": "", "icon":"?"}' "./scripts/network.sh")
(defpoll battery :interval "1000ms" :initial '{"percentage":"0", "icon":"?"}' "./scripts/battery.sh")
(defpoll consumption :interval "1s" :initial "" "sensors -j | jq -r '.[\"BAT0-acpi-0\"].power1.power1_input'")
(defpoll avgload :interval "1000ms" :initial '"(AVG LOAD)"' "uptime | awk -F'[a-z]:' '{ print $2}'")

(defpoll volume :interval "500ms" "~/.config/eww/scripts/volume.sh json")

(defpoll updates_count :interval "600s" "checkupdates | wc -l")
(defpoll br :interval "1s" "~/.config/eww/scripts/brightness.sh br")
(defpoll brightness :interval "5s" "~/.config/eww/scripts/brightness.sh json")

(defpoll winfocus :interval "1s" "~/.config/eww/scripts/miscellaneous.sh win")

(defpoll meteoDesenzanoDelGarda :interval "300s" "~/.config/eww/scripts/meteo.sh 'Desenzano Del Garda' 45.457692 10.570684")
;; (defpoll meteoMalmo :interval "120s" "~/.config/eww/scripts/meteo.sh 'Malmö' 55.60587 13.00073")
;; (defpoll meteoOslo :interval "600s" "~/.config/eww/scripts/meteo.sh 'Oslo' 59.911491 10.757933")
;; (defpoll meteoArendal :interval "120s" "~/.config/eww/scripts/meteo.sh 'Arendal' 58.46151 8.77253")
(defpoll meteoKarlstad :interval "600s" "~/.config/eww/scripts/meteo.sh 'Karlstad' 59.378333 13.504167")
(defpoll meteoLinköping :interval "600s" "~/.config/eww/scripts/meteo.sh 'Linköping' 58.415833, 15.625278")
(defpoll meteoGoteborg :interval "600s" "~/.config/eww/scripts/meteo.sh 'Göteborg' 57.70716 11.96679")
(defpoll meteoKristiansand :interval "600s" "~/.config/eww/scripts/meteo.sh 'Kristiansand' 58.14671 7.9956")

(defpoll bluetooth :interval "1s" "~/.config/eww/scripts/bluetooth.sh all")
(defpoll bluetooth_devices :interval "1s" "~/.config/eww/scripts/bluetooth.py")

(defpoll windows :interval "2s" "niri msg -j windows")
(defpoll windows_enhanced :interval "2s" "~/.config/niri/taskbar.py")
;(defpoll workspaces_keys :interval "2s" "~/.config/niri/taskbar.sh | jq keys")
(defpoll workspaces :interval "2s" "niri msg -j workspaces | jq 'sort_by(.id)'")

(include "./mywidgets/notifications2.yuck")
(include "./mywidgets/music.yuck")
(include "./mywidgets/sessionbuttons.yuck")
(include "./mywidgets/sundial.yuck")
(include "./mywidgets/timer.yuck")

(include "./panels/osd.yuck")

(defwidget bg_music_notif []
    (box
        :orientation "v"
        :spacing 32
        :space-evenly false
        ;; :width "256px"
        :hexpand true
        (spotify)
        (notifications)
    )
)

(include "./panels/batteryborder.yuck")

(defwindow batteryborder
    :geometry (geometry
        :height "100%"
        :anchor "center right"
    )
    :monitor 0
    :exclusive true
    :stacking "fg"
    :namespace "eww_batteryborder"
    (batteryborder)
)





;; all icons are nf-md-...

(include "./mywidgets/audio.yuck")
(include "./mywidgets/clock.yuck")
(include "./panels/leftstatusbar.yuck")
;;(include "./widgets2/screenshot.yuck")
;;(include "./widgets2/recorder.yuck")
;;(include "./widgets2/workspaces.yuck")

(defwindow leftstatusbar [] ;; [stacking]
    :geometry (geometry
        :height "100%"
        :anchor "center left"
    )
    :monitor 0
    :exclusive true
    ;; :stacking { stacking }
    :stacking "fg"
    :namespace "eww_leftstatusbar"
    (leftstatusbar)
)

(defwindow leftbaraddons
  :monitor 0 ;; wayland users may need this
  :stacking "overlay"
  :wm-ignore true
  :geometry (geometry
      :height "100%"
      :anchor "center left"
  )
  (leftbar_addons_layout)
)
(defwindow microaddons
  :monitor 0 ;; wayland users may need this
  :stacking "overlay"
  :wm-ignore true
  :geometry (geometry
      :anchor "bottom center"
      :width "20%"
      :y 26
  )
  (microaddons_layout)
)






;(deflisten current_theme :initial "dark" "../scripts/material.py --current")

;;(include "./panels/powermenu.yuck")

;;(defwindow powermenu
;;  :monitor 0 ;; wayland users may need this
;;  :stacking "fg"
;;  :wm-ignore true
;;  ;; :geometry (geometry :width "40%" :height "100%" :anchor "center right")
;;  :geometry (geometry :width "100%" :height "100%" :anchor "center")
;;  (powermenu_layout)
;;)

(defwindow notificationsoverlay
  :monitor 0 ;; wayland users may need this
  :stacking "fg"
  :wm-ignore true
  :geometry (geometry :width "16%" :height "98%" :x 0 :anchor "center right" )
  (box :valign "start" :halign "end"
            :vexpand true :hexpand true
        (notifications-panel)
    )
)

(include "./panels/microstatusbar.yuck")

(defwindow microstatusbar
  :monitor 0 ;; wayland users may need this
  :stacking "fg"
  :wm-ignore true
  :geometry (geometry :width "100%" :height "20px" :anchor "bottom center")
  (microstatusbar_layout)
)



;; test purpose
(defwindow wintitle
  :monitor 0 ;; wayland users may need this
  :stacking "fg"
  :wm-ignore true
  :geometry (geometry :height "2px")
  (wintitle_layout)
)

(defwidget wintitle_layout []

  (box :orientation "h"
      :valign "start"
      :halign "center"
      :space-evenly "false"
      :class "window"
      :height 20
      :spacing 20
    (label :text "-${winfocus.title}-")
  )
)






(include "./panels/dashboard_light.yuck")

(defwindow dashboard_light
  :monitor 0 ;; wayland users may need this
  :stacking "fg"
  :wm-ignore true
  :geometry (geometry :width "100%" :height "100%")
  (dashboard_light_layout)
)
