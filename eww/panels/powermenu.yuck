(include "./mywidgets/musiccc.yuck")
(include "./mywidgets/sliders.yuck")
(include "./mywidgets/quick_settings.yuck")

; not used for now, replaced by "slider" defined in sliders.yuck
(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))
;(metric :label {volumeicon}
;        :value volumevalue
;        :onchange "amixer -D pulse sset Master {}%")

(defwidget sessionbuttons [shutdown shutdown_icon reboot
                    reboot_icon logout logout_icon lock lock_icon]
  (box :class "btns-box" :spacing 5
       :vexpand true :hexpand true
       :valign "end" :halign "end"
       :space-evenly false
    (button :onclick shutdown shutdown_icon)
    (button :onclick reboot reboot_icon)
    (button :onclick logout logout_icon)
    (button :onclick lock lock_icon)))

(defwidget networkbox []
  (box :class "box" :spacing 5
       :valign "center" :hexpand "true"
       :space-evenly false
       :orientation "v"
    (box :orientation "h" :hexpand true
      (label :hexpand true :text "${network.icon} ${network.essid}")
      (label :halign "right" :text "${EWW_NET.enp0s3.NET_UP} ${EWW_NET.enp0s3.NET_DOWN}")
    )
    (slider :icon "" :text "${network.signal}%" :value {network.signal} :onchange "")
    
  )
)

(defwidget meteobox []
  (box :class "box" :spacing 5
       :valign "center" :hexpand "true"
       :space-evenly false
       :orientation "v"
    (box :orientation "h" :halign "center"
      (image :image-width 50 :path "/home/vncnz/.config/eww/images/weather/${meteo.icon_name}")
      (label :text "${meteo.text}")
      ;; (label :halign "right" :text "${round(EWW_NET.enp0s3.NET_UP, 2)} ${round(EWW_NET.enp0s3.NET_DOWN, 2)}")
    )
    ;; (label :text "${meteo.temp_real}${meteo.temp_unit}")
    ;; (label :text "${meteo.temp}${meteo.temp_unit}")
    (slider :icon "" :text "${meteo.temp_real}${meteo.temp_unit} (real)" :value {(meteo.temp_real+10)*2} :onchange "")
    (slider :icon "" :text "${meteo.temp}${meteo.temp_unit} (feel)" :value {(meteo.temp+10)*2} :onchange "")
    ;; (label :text "${meteo}")
    ;; (slider :icon "" :text "${network.signal}%" :value {network.signal} :onchange "")
  )
)

(defwidget _sundial []
  (label :class "sundial-lbl" :halign "start" :hexpand true
         :text {time.hour >= 2 && time.hour <= 4 ? "Early Morning" :
               time.hour <= 5 ? "Dawn" :
               time.hour >= 6
                && (time.hour <= 8 && time.min <= 59)
                  ? "Morning" :
               time.hour >= 9
                 && (time.hour <= 11 && time.min <= 59)
                   ? "Late Morning" :
               time.hour == 12 && time.min <= 29
                 ? "Midday" :
               time.hour >= 12 && time.hour <= 16
                 ? "Afternoon" :
               time.hour > 16 && time.hour <= 17
                 ? "Late Afternoon" :
               (time.hour >= 17 && time.min <= 1)
                 || (time.hour <= 18 && time.min <= 20)
                   ? "Early Evening" :
               time.hour >= 18 && time.hour <= 19
                 ? "Dusk" :
               time.hour > 19 && time.hour <= 21
                 ? "Late Evening" :
               time.hour > 21 ? "Night" : "Midnight"}))

(defwidget graphbox [text value]
  (box :class "box" :spacing 5
      :valign "center" :halign "center"
      :space-evenly false
      :orientation "v"
      (graph :width 100 :height 140 :value value :time-range "60s" :min "0" :max "100" :thickness "2")
      (label :text text)
  )
)


(defwidget powermenu_layout []
  (overlay :class "dashboard" :space-evenly false
    (box :class "wallpaper" :style "background-image: url('/home/vncnz/Pictures/wallpaper.jpg')")
    (box :halign "center" :spacing 25 :orientation "h"
      (box :orientation "v" :spacing 25 :valign "center" :space-evenly false
        (box :spacing 15 :class "tm-box" :space-evenly false
              :valign "end" :hexpand "true"
          (_sundial)
          (label :text "")
          (label :text "${time.hour}:${time.min}")
          (label :text "")
          (label :text "${time.year}-${time.month}-${time.day}")
        )
        (box :class "box"
          (calendar :show-week-numbers "true")
        )
        (meteobox)
        (music)
        (box :class "box" :orientation "v"
          (label :width 100 :wrap "true" :text "My shadow's the only one that walks beside me")
          (label :width 100 :wrap "true" :class "author" :halign "end" :text "Green day")
        )
      )
      (box :orientation "v" :spacing 25 :valign "center" :space-evenly false
        (networkbox)
        (box :orientation "h"
          (graphbox :text "CPU" :value {EWW_CPU.avg / arraylength(EWW_CPU.cores)})
          (graphbox :text "RAM" :value {EWW_RAM.used_mem_perc})
          (graphbox :text "DISK" :value {(1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100})
          (graphbox :text "TEMP (${EWW_TEMPS.AMDGPU_EDGE}°C)" :value {EWW_TEMPS.AMDGPU_EDGE})
        )
        (box :class "box" :orientation "v"
          (label :text "systray (TODO)")
          (systray)
        )
        (box :class "box"
          (sliders)
        )
        (box :space-evenly false :hexpand true :vexpand true
      
          (sessionbuttons :shutdown "poweroff" :reboot "reboot"
                    :logout "loginctl terminate-user $USER"
                    :lock "swaylock -i /home/vncnz/Pictures/wallpaper.jpg"
                    :shutdown_icon "" :reboot_icon ""
                    :logout_icon "" :lock_icon "")
        )
      )
    )
    (box :valign "start" :space-evenly true :hexpand true :spacing 25
        (box :space-evenly false :spacing 25 :vexpand true :hexpand true :valign "center" :halign "start" :orientation "vertical"
          (box :class "overlay-btns" :valign "start" :halign "end" :hexpand true
            (label :text {EWW_TEMPS})
          )
          (quick_settings)
        )
        (box :class "overlay-btns" :valign "start" :halign "end"
          (button :onclick "eww close powermenu" :class "close-btn" "")
        )
    )
  )
)