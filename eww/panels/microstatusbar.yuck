(defwidget microstatusbar_layout []
  (box
    :orientation "h"
    :valign "end"
    :halig "center"
    :class "microbar"
    (box
        :orientation "v"
        :width "100%"
        :hexpand true
        :space-evenly false
        (centerbox
            :orientation "h"
            :class "bottom"
            :width "100%"
            :hexpand true
            :space-evenly false
            :spacing 10
            ;; (audio)
            (box :spacing 5 :hexpand false :halign "start" :space-evenly false
                :valign "end"
              (eventbox :onclick "niri msg action focus-column-left" (label :text ""))
              (eventbox :onclick "niri msg action focus-column-right" (label :text ""))
              (spotify_plaintext)
            )
            (clock_time)
            (box :hexpand false :halign "end" :valign "end" :space-evenly false :spacing 10
              (box :width 100 :vexpand "true"
                (graph :width 100 :vexpand "true" :value {EWW_CPU.avg} :time-range "60s" :min "0" :max "100" :thickness "1")
              )
              (box :valign "center" :halign "center" :orientation "h" :visible {EWW_RAM.used_mem_perc > 75}
                (label :text "${round(EWW_RAM.used_mem_perc, 0)}%")
                (label :text ""
                      :class "${EWW_RAM.used_mem_perc < 90 ? "warn-color" : "err-color"}"
                )
              )
              (box :valign "center" :halign "center" :orientation "h" :visible {EWW_TEMPS.AMDGPU_EDGE > 55}
                (label :text "${EWW_TEMPS.AMDGPU_EDGE ?: 0}°C")
                (label :text "${EWW_TEMPS.AMDGPU_EDGE < 40 ? "" : (EWW_TEMPS.AMDGPU_EDGE < 55 ? "" : (EWW_TEMPS.AMDGPU_EDGE < 65 ? "" : (EWW_TEMPS.AMDGPU_EDGE < 75 ? "" : "")))}"
                      :class "${EWW_TEMPS.AMDGPU_EDGE < 70 ? "warn-color" : "err-color"}"
                )
              )
              (box :valign "center" :halign "center" :orientation "h"
                (label :text "${battery.percentage}%")
                (label ;; :class "icon"
                  ;; :class {battery.state == "nobattery" ? "nodata-color" : (battery.state == "fully-charged") ? "" : battery.state == "charging" ? "primary-color" : (battery.percentage < 25 ? `err-color` : (battery.percentage < 50 ? `warn-color` : `ok-color`))}
                  :class {battery.clazz}
                  :text {battery.icon})
              )
              (box :valign "center" :halign "center" :orientation "h" :visible "network.signal != ''"
                (label :visible {network.signal != ''} :text "${network.signal}%")
                (label :class "${network.class}" :text "${network.icon}")
              )
              (micronotifications)
            )
            ;;(box :valign "center" :halign "center" :orientation "horizontal" (clock))
            ;;(box :height 12)
        )
        (box
            :height 0
        )
    )
  )
)